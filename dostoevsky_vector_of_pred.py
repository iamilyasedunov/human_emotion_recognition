# -*- coding: utf-8 -*-
"""dostoevsky_vector_of_pred.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zyOdnGU5hoHe9IMYQZl-3OkzFmV796d4
"""

from google.colab import drive
drive.mount('/MyDrv')
!ls
!cp "/MyDrv/My Drive/Research/public_youtube1120_mp3.csv" "../"
!cp "/MyDrv/My Drive/Research/asr_public_phone_calls_2.csv" "../"
#!cp "/MyDrv/My Drive/Research/train.json" "../"
#!cp "/MyDrv/My Drive/Research/test.json" "../"

import sys
!{sys.executable} -m pip install dostoevsky==0.1.2

import sys
!{sys.executable} -m pip install folium==0.2.1

!dostoevsky download vk-embeddings cnn-social-network-model

from dostoevsky.tokenization import UDBaselineTokenizer, BaselineTokenizer
from dostoevsky.word_vectors import SocialNetworkWordVectores,  Word2VecContainer
from dostoevsky.models import SocialNetworkModel, BaseModel
from keras.preprocessing.sequence import pad_sequences      
  
tokenizer = BaselineTokenizer()

word_vectors_container = SocialNetworkWordVectores()

model = SocialNetworkModel(
  tokenizer=tokenizer,
  word_vectors_container=word_vectors_container,
  lemmatize=False,
)
sentences = ['наступили на ногу']
X = pad_sequences([
    model.word_vectors_container.get_word_vectors(
        model.tokenizer.split(sentence, lemmatize=model.lemmatize)
    ) for sentence in sentences
], maxlen=model.sentence_length, dtype='float32')
Y = model.model.predict(X)
print('Y = {}'.format(Y))

import csv
import pandas as pd

df = pd.read_csv('../public_youtube1120_mp3.csv', encoding='Windows-1251')
saved_column = df.text.tolist()

import numpy as np

print('Y = {}'.format(list(Y)))
list_Y = np.array(Y)
print(list_Y[0][2])

STEP = 200
ret = []
for i in range(int(len(saved_column)) - 1):
  samples = saved_column[(i * STEP) : ((i+1) * STEP)]
  pred = model.predict(samples)
  if ((i+1)%5 ==0):
    print(i, samples, pred)
    df['pred']=pd.Series(ret)
    df.to_csv('../public_youtube1120_mp3.csv', encoding='Windows-1251')
    
  ret.append(pred[0])

#df['pred'] = ret
df.to_csv('../asr_public_phone_calls_2_after_pred.csv', encoding='Windows-1251')